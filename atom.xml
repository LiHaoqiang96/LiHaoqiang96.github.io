<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://LiHaoqiang96.github.io</id>
    <title>Li Haoqiang</title>
    <updated>2019-07-10T02:10:35.099Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://LiHaoqiang96.github.io"/>
    <link rel="self" href="https://LiHaoqiang96.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://LiHaoqiang96.github.io/images/avatar.png</logo>
    <icon>https://LiHaoqiang96.github.io/favicon.ico</icon>
    <rights>All rights reserved 2019, Li Haoqiang</rights>
    <entry>
        <title type="html"><![CDATA[Ke-Work log]]></title>
        <id>https://LiHaoqiang96.github.io/post/ke-work-log</id>
        <link href="https://LiHaoqiang96.github.io/post/ke-work-log">
        </link>
        <updated>2019-07-09T01:59:59.000Z</updated>
        <summary type="html"><![CDATA[<blockquote>
<blockquote>
<blockquote>
<p>2018年11月8日入职&lt;&lt;&lt;</p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<h2 id="11月">11月</h2>
</blockquote>
<p>08：入职培训；配置开发环境<br>
09：熟悉查询API接口</p>
<p>本周：<br>
【平台开发】<br>
百度poi项目开发10%@李浩强<br>
下周计划：<br>
【平台开发】<br>
poi项目开发@李浩强</p>
]]></summary>
        <content type="html"><![CDATA[<blockquote>
<blockquote>
<blockquote>
<p>2018年11月8日入职&lt;&lt;&lt;</p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<h2 id="11月">11月</h2>
</blockquote>
<p>08：入职培训；配置开发环境<br>
09：熟悉查询API接口</p>
<p>本周：<br>
【平台开发】<br>
百度poi项目开发10%@李浩强<br>
下周计划：<br>
【平台开发】<br>
poi项目开发@李浩强</p>
<!-- more -->
<p>12：完成【URL拼接】、【返回数据总页数查询】、【获取所有结果集合】；将代码push到GitLab上，提交合并请求<br>
13：使用线程池、对代码进行整理；将代码push到GitLab上<br>
14：将数据写入Kafka进行测试<br>
15：修改线程池<br>
16：修改存在的小问题</p>
<p>本周：<br>
【平台开发】<br>
完成URL拼接、返回数据总页数查询、获取所有结果集合100%@李浩强<br>
使用线程池、对代码进行优化上100%@李浩强<br>
将数据写入Kafka进行测试100%@李浩强<br>
修改线程池、修改存在的问题100%@李浩强<br>
下周计划：<br>
【平台开发】<br>
POI项目上线@李浩强</p>
<!-- more -->
<p>19：负载问题分析设计<br>
20：获取库中相关信息，整理行业两级分类并持久化<br>
21：任务分发端开发<br>
22：爬取所有二级分类<br>
23：开发二级行业分类可选（规划中）</p>
<p>本周：<br>
【平台开发】<br>
负载问题分析设计 100%@李浩强<br>
获取库中相关信息，整理一级、二级行业分类并持久化 100%@李浩强<br>
任务分发端开发 100%@李浩强<br>
爬取所有二级行业分类开发 100%@李浩强<br>
下周计划：<br>
【抓取】<br>
看点抓取端业务交接@费轲@李浩强</p>
<!-- more -->
<p>26：修改写入 Kafka 的数据，加入行业二级分类名<br>
27：解决 redis 中没有数据的情况下启动poi、redis 已经初始化完成再次进行 redisWrite 的情况下的 bug<br>
28：解决线上 redis 连接异常<br>
29：加入异常终止机制<br>
30：统一 poi 、dispatcher 程序入口</p>
<p>本周：<br>
【平台开发】<br>
poi项目加入行业二级分类名@李浩强<br>
解决poi项目redis情况下的 bug@李浩强<br>
加入异常终止机制@李浩强<br>
统一 poi 、dispatcher 程序入口@李浩强<br>
下周计划：<br>
【平台开发】<br>
百度路线规划项目@李浩强<br>
【抓取】<br>
熟悉并接入看点项目@李浩强</p>
<!-- more -->
<blockquote>
<h2 id="12月">12月</h2>
</blockquote>
<p>03：抽象单一化 poi、dispatcher 的功能和关系<br>
04：加入回写机制，防止数据丢失<br>
05：线上测试 spider-dispatcher、spider-poi项目<br>
06：改进爬虫线程，提高利用率<br>
07：优化项目，解决OOM问题</p>
<p>本周：<br>
【平台开发】<br>
抽象单一化 poi、dispatcher 的功能和关系@李浩强<br>
加入回写机制，防止数据丢失@李浩强<br>
线上测试 poi、dispatcher项目@李浩强<br>
改进爬虫线程，提高利用率；优化项目@李浩强<br>
下周计划：<br>
【平台开发】<br>
百度地图项目@李浩强</p>
<!-- more -->
<p>10：新房 poi 设计<br>
11：修改部分代码，使之符合Alibaba Java Coding Guidelines规范<br>
12：新房 poi 开发<br>
13：合并二手房、新房 poi</p>
<p>本周：<br>
【平台开发】<br>
新房 poi 设计@李浩强<br>
修改部分代码，使之符合Alibaba Java Coding Guidelines规范@李浩强<br>
新房 poi 开发@李浩强<br>
合并二手房.新房 poi@李浩强</p>
<!-- more -->
<p>2019年</p>
<blockquote>
<h2 id="01月">01月</h2>
</blockquote>
<p>14：百度地图控制中心服务的查询列表开发<br>
15：基于 Spring 的限流设计<br>
16：Guava 原理分析，使用其设计分布式缓存<br>
17：优化 spider-poi；测试 SpringBoot 应用监控 Actuator 的可行性<br>
18：2019 H1 OKR</p>
<p>本周：<br>
【平台开发】<br>
百度地图控制中心服务的查询列表开发@李浩强<br>
优化 spider-poi，测试 SpringBoot 应用监控 Actuator 的可行性@李浩强<br>
下周计划：<br>
【平台开发】<br>
路线规划代码重构@李浩强</p>
<!-- more -->
<p>21：规范 spider-poi、spider-dispatcher 编码<br>
22：定位 spider-poi 缺失数据原因<br>
23：修复 spider-poi 缺失数据问题，进行测试<br>
24：比对出具体丢失数据，修改 poi，上线<br>
25：&lt;部门年度总结大会&gt;</p>
<p>本周：<br>
【平台开发】<br>
规范 spider-poi、spider-dispatcher 编码@李浩强<br>
定位 poi 缺失数据原因，进行测试@李浩强<br>
比对出具体丢失数据，修改 poi@李浩强<br>
下周计划：<br>
【平台开发】<br>
poi采集服务数据补全 @李浩强<br>
新房路线规划研发@李浩强</p>
<!-- more -->
<p>28：通过对比，确保 poi 不会出现丢数据问题<br>
29：提升 poi 的抓取速度<br>
30：路线规划<br>
31：路线规划</p>
<p>本周：<br>
【平台开发】<br>
poi采集线上数据进行比对，保证数据质量@李浩强<br>
poi采集数据速度优化@李浩强<br>
下周计划：<br>
【平台开发】<br>
新房路线规划开发完成@李浩强</p>
<!-- more -->
<blockquote>
<h2 id="02月">02月</h2>
</blockquote>
<p>11：路线规划方案设计<br>
12：开发路线规划<br>
13：测试路线规划并上线<br>
14：修改路线规划 API 返回码的判断、优化 poi 项目<br>
15：解决路线规划 status 捕获问题</p>
<p>本周：<br>
【平台开发】<br>
新房路线规划开发@李浩强<br>
poi 项目优化@李浩强<br>
下周计划：<br>
【平台开发】<br>
跟进新房、二手房路线规划数据落地情况@李浩强<br>
推进爬虫平台配置文件微服务化@李浩强</p>
<!-- more -->
<p>18：新房路线规划 topic 落表、修改新房路线规划只要步行规划、新房的 poi 去重<br>
19：与百度工作人员沟通，确定了路线规划 status 返回状态码的处理，确保调用 API 不会产生问题<br>
20：学习 Spring Cloud Config 在爬虫平台配置文件微服务化中的应用<br>
21：Redis 事务处理并发问题<br>
22：新房 poi 去重策略调整为：配合新房 poi 的数据源同步</p>
<p>本周：<br>
【平台开发】<br>
新房 poi 原始数据去重@李浩强<br>
完善对百度 API 返回的 status 处理，确保数据不丢失@李浩强<br>
新房路线规划变更为只要步行规划@李浩强<br>
下周计划：<br>
【平台开发】<br>
配合新房 poi 数据源同步@李浩强<br>
路线规划新业务@李浩强</p>
<!-- more -->
<p>25：配合业务需要，修改 spider-dispatcher 为多数据源连接配置；解决 新房路线规划抓取数据错误的问题<br>
26：新房路线规划数据落地、二手房路线规划部分数据优先级调整、二手房路线规划优先数据开始落地<br>
27：同步新房 poi 的数据源、定位并解决二手房路线规划的的数据源问题<br>
28：二手房路线规划优先数据全部落地，继续抓取二手房原来数据</p>
<blockquote>
<h2 id="03月">03月</h2>
</blockquote>
<p>01：定位新房路线规划数据为负的问题，解决 百度 API 返回数据有误的问题</p>
<p>本周：<br>
【行业数仓】<br>
开发调整 spider-dispatcher 多数据数据库配置@李浩强<br>
开发二手房路线规划优数据落地@李浩强<br>
下周计划：<br>
【行业数仓】<br>
新房poi坐标点入口切换并去重@李浩强<br>
百度地图api转发服务优化@李浩强</p>
<!-- more -->
<p>04：开发新房poi坐标点入口切换并去重，新房路线规划Kafka添加起始点、目的地的纬度、经度坐标共4个标签<br>
05：二手房路线规划抓取等待时间缩短，提升抓取效率<br>
06：解决数据不标准导致的死循环问题，解决冲突，合并新房poi代码<br>
07：修改新房 poi 阻塞失败的问题<br>
08：编译周报 WiKi</p>
<p>本周：<br>
【行业数仓】<br>
新房poi坐标点入口切换并去重研发100%<br>
新房路线规划始点、目的地的纬度、经度坐标标签处理100%<br>
二手房路线规划抓取等待时间缩短，提升抓取效率100%</p>
<!-- more -->
<p>11：新房 poi 上线，下午抵达泰山饭店<br>
12：《开营活动 &amp; 贝壳行业价值分享》、遇贝笔记任务制作<br>
13：《贝壳产品技术大观 &amp; 贝壳产品技术实践分享与体验》、遇贝笔记任务制作<br>
14：《First Blood：户外拓展》、遇贝笔记任务制作<br>
15：《绽放未来：遇贝笔记发布会》、遇贝未来之夜</p>
<!-- more -->
<p>18：新房路线规划数据落地<br>
19：熟悉 spider-forwarding<br>
20：优化二手房&amp;新房 poi 项目、新房路线规划数据校对<br>
21：spider-tiny 代码设计<br>
22：spider-tiny 代码部分实现</p>
<p>本周：<br>
【行业数仓】<br>
新房路线规划数据落地、校对<br>
【平台开发】<br>
优化二手房&amp;新房 poi<br>
下周计划：<br>
【平台开发】<br>
百度地图api转发服务优化</p>
<!-- more -->
<p>25：Apache ab 测试搭建<br>
26：代理服务拉取压测<br>
27：定位 QPS 较低的问题<br>
28：搭建同一网络内 Apache ab，消除不同网段所产生的压力测试结果误判<br>
29：得出压测结论，排除未在同网而导致的压测结论偏差较大</p>
<p>本周：<br>
【平台开发】<br>
代理服务拉取压测<br>
ab搭建测试搭建<br>
下周计划：<br>
【平台开发】<br>
百度地图 api 转发服务监测</p>
<!-- more -->
<blockquote>
<h2 id="07月">07月</h2>
</blockquote>
<p>09：入职；新房 poi 更新<br>
10：<br>
11：<br>
12：</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Spring Cloud 2.X中Hystrix没有hystrix.stream的解决方案]]></title>
        <id>https://LiHaoqiang96.github.io/post/spring-cloud-2x-zhong-hystrix-mei-you-hystrixstream-de-jie-jue-fang-an</id>
        <link href="https://LiHaoqiang96.github.io/post/spring-cloud-2x-zhong-hystrix-mei-you-hystrixstream-de-jie-jue-fang-an">
        </link>
        <updated>2019-05-20T09:20:00.000Z</updated>
        <content type="html"><![CDATA[<h2 id="第一步在启动类上面添加注解">第一步：在启动类上面添加注解</h2>
<p><code>@EnableCircuitBreaker</code>
表示开启熔断器</p>
<h2 id="第二步在启动类中添加如下代码">第二步：在启动类中添加如下代码</h2>
<pre><code>		@Bean
    public ServletRegistrationBean getServlet(){

        HystrixMetricsStreamServlet streamServlet = new HystrixMetricsStreamServlet();
        ServletRegistrationBean registrationBean = new ServletRegistrationBean(streamServlet);
        registrationBean.setLoadOnStartup(1);  //系统启动时加载顺序
        registrationBean.addUrlMappings(&quot;/hystrix.stream&quot;);//路径
        registrationBean.setName(&quot;HystrixMetricsStreamServlet&quot;);
        return registrationBean;
    }
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[CentOS服务器安装Redis并配置远程连接]]></title>
        <id>https://LiHaoqiang96.github.io/post/centos-fu-wu-qi-an-zhuang-redis-bing-pei-zhi-yuan-cheng-lian-jie</id>
        <link href="https://LiHaoqiang96.github.io/post/centos-fu-wu-qi-an-zhuang-redis-bing-pei-zhi-yuan-cheng-lian-jie">
        </link>
        <updated>2019-05-15T09:35:39.000Z</updated>
        <content type="html"><![CDATA[<p>centos7服务器安装redis并配置远程连接</p>
<h2 id="一-安装redis">一、安装redis</h2>
<h5 id="1选择安装路径-cd-usrlocal">1.选择安装路径    cd /usr/local</h5>
<h5 id="2下载redis安装包-wget-httpdownloadredisioreleasesredis-406targz">2.下载redis安装包    wget http://download.redis.io/releases/redis-4.0.6.tar.gz</h5>
<h5 id="3解压压缩包-tar-zxvf-redis-406targz">3.解压压缩包    tar -zxvf redis-4.0.6.tar.gz</h5>
<h5 id="4yum安装gcc依赖-yum-install-gcc-遇到选择输入y即可">4.yum安装gcc依赖    yum install gcc    遇到选择输入y即可</h5>
<h5 id="5进入redis解压目录下-cd-redis-406">5.进入redis解压目录下    cd redis-4.0.6</h5>
<h5 id="6编译-make-malloclibc">6.编译    make MALLOC=libc</h5>
<h5 id="7安装-cd-src-make-install">7.安装     cd src &amp;&amp; make install</h5>
<h5 id="8启动redis在当前的-usrlocalredis-406src-目录下启动-redis-server出现logo表示启动成功但是这种启动方式需要一直打开窗口不能进行其他操作不太方便-按-ctrl-c可以关闭窗口">8.启动redis（在当前的 /usr/local/redis-4.0.6/src 目录下启动）   ./redis-server出现logo表示启动成功，但是这种启动方式需要一直打开窗口，不能进行其他操作，不太方便。按 ctrl + c可以关闭窗口。</h5>
<h2 id="二-以后台进程方式启动redis">二、以后台进程方式启动redis</h2>
<h5 id="1回到redis-406目录下修改redisconf文件-cd-vim-redisconf将-daemonize-no-修改为-daemonize-yes">1.回到redis-4.0.6目录下修改redis.conf文件    cd..       vim redis.conf将 daemonize no 修改为 daemonize yes</h5>
<h5 id="2指定redisconf文件启动-redis-server-usrlocalredis-406redisconf">2.指定redis.conf文件启动    ./redis-server /usr/local/redis-4.0.6/redis.conf</h5>
<h5 id="3关闭redis进程首先使用-ps-aux-grep-redis-查看redis进程找到6379端口号对应的进程号-kill-9-3344">3.关闭redis进程首先使用  ps -aux | grep redis  查看redis进程,找到6379端口号对应的进程号   kill -9 3344</h5>
<h5 id="4设置redis开机自启动">4.设置redis开机自启动</h5>
<p>####### 1）在/etc目录下新建redis目录    mkdir redis
####### 2）将/usr/local/redis-4.0.6/redis.conf 文件复制一份到/etc/redis目录下，并命名为6379.conf    cp /usr/local/redis-4.0.6/redis.conf /etc/redis/6379.conf
####### 3）将redis的启动脚本复制一份放到/etc/init.d目录下       cp /usr/local/redis-4.0.6/utils/redis_init_script /etc/init.d/redisd
####### 4）切换到/etc/init.d目录下，然后执行自启命令    chkconfig redisd on如果失败表示redisd不支持chkconfig解决方法：使用vim编辑redisd文件，在第一行加入如下两行注释，保存退出# chkconfig:   2345 90 10# description:  Redis is a persistent key-value database注释的意思是，redis服务必须在运行级2，3，4，5下被启动或关闭，启动的优先级是90，关闭的优先级是10。再次执行自启命令就会成功    chkconfig redisd on现在可以直接已服务的形式启动和关闭redis了启动：service redisd start关闭：service redisd stop</p>
<h2 id="三-设置外网访问">三、设置外网访问</h2>
<h5 id="1编辑redisconf文件-vim-redisconf">1.编辑redis.conf文件   vim redis.conf</h5>
<p>将redis-service设置为后台服务(no改为yes）</p>
<p>设置redis-cli连接redis服务器的密码(前面的#去掉)</p>
<p>将绑定的本机给注释掉</p>
<p>关闭保护模式</p>
<h5 id="2开放防火墙的redis端口6379-iptables-i-input-4-p-tcp-m-state-state-new-m-tcp-dport-6379-j-accept-service-iptables-save-保存iptables规则-iptables-nvl-查看iptables表的规则修改后杀掉进程重启服务">2.开放防火墙的redis端口6379 iptables -I INPUT 4 -p tcp -m state --state NEW -m tcp --dport 6379 -j ACCEPT service iptables save     #保存iptables规则 iptables -nvL    #查看iptables表的规则修改后杀掉进程，重启服务。</h5>
<h5 id="3添加阿里云安全组规则开放6379端口">3.添加阿里云安全组规则，开放6379端口</h5>
<h5 id="4远程连接测试">4.远程连接测试</h5>
<p>####### 方法1）windows下   win+r  输入cmd进入控制台 输入    telnet 47.92.xx.xx 6379  进入空白页表示连接成功，显示无telnet命令的话，百度：win10启动telnet教程
####### 方法2）另一台liunx系统的命令行中输入  redis-cli -h 47.92.xx.xx -p 6379出现47.92.xx.xx:6379&gt;  表示成功</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://LiHaoqiang96.github.io/post/hello-gridea</id>
        <link href="https://LiHaoqiang96.github.io/post/hello-gridea">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="http://hvenotes.fehey.com/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>𝖶𝗂𝗇𝖽𝗈𝗐𝗌</strong> 或 <strong>𝖬𝖺𝖼𝖮𝖲</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>